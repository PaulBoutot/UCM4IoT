/**
 * generated by Xtext 2.25.0
 */
package mde.iot.ucm4iot.ucm4iot.impl;

import java.util.Collection;

import mde.iot.ucm4iot.ucm4iot.ExtensionBlock;
import mde.iot.ucm4iot.ucm4iot.Outcome;
import mde.iot.ucm4iot.ucm4iot.Step;
import mde.iot.ucm4iot.ucm4iot.Ucm4iotPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Extension Block</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link mde.iot.ucm4iot.ucm4iot.impl.ExtensionBlockImpl#getRefStep <em>Ref Step</em>}</li>
 *   <li>{@link mde.iot.ucm4iot.ucm4iot.impl.ExtensionBlockImpl#isHasRangedRef <em>Has Ranged Ref</em>}</li>
 *   <li>{@link mde.iot.ucm4iot.ucm4iot.impl.ExtensionBlockImpl#getEndRefStep <em>End Ref Step</em>}</li>
 *   <li>{@link mde.iot.ucm4iot.ucm4iot.impl.ExtensionBlockImpl#getSteps <em>Steps</em>}</li>
 *   <li>{@link mde.iot.ucm4iot.ucm4iot.impl.ExtensionBlockImpl#getOutcome <em>Outcome</em>}</li>
 *   <li>{@link mde.iot.ucm4iot.ucm4iot.impl.ExtensionBlockImpl#getBlocks <em>Blocks</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExtensionBlockImpl extends MinimalEObjectImpl.Container implements ExtensionBlock
{
  /**
   * The cached value of the '{@link #getRefStep() <em>Ref Step</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRefStep()
   * @generated
   * @ordered
   */
  protected Step refStep;

  /**
   * The default value of the '{@link #isHasRangedRef() <em>Has Ranged Ref</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isHasRangedRef()
   * @generated
   * @ordered
   */
  protected static final boolean HAS_RANGED_REF_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isHasRangedRef() <em>Has Ranged Ref</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isHasRangedRef()
   * @generated
   * @ordered
   */
  protected boolean hasRangedRef = HAS_RANGED_REF_EDEFAULT;

  /**
   * The cached value of the '{@link #getEndRefStep() <em>End Ref Step</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEndRefStep()
   * @generated
   * @ordered
   */
  protected Step endRefStep;

  /**
   * The cached value of the '{@link #getSteps() <em>Steps</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSteps()
   * @generated
   * @ordered
   */
  protected EList<Step> steps;

  /**
   * The cached value of the '{@link #getOutcome() <em>Outcome</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOutcome()
   * @generated
   * @ordered
   */
  protected Outcome outcome;

  /**
   * The cached value of the '{@link #getBlocks() <em>Blocks</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBlocks()
   * @generated
   * @ordered
   */
  protected EList<ExtensionBlock> blocks;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExtensionBlockImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Ucm4iotPackage.Literals.EXTENSION_BLOCK;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Step getRefStep()
  {
    if (refStep != null && refStep.eIsProxy())
    {
      InternalEObject oldRefStep = (InternalEObject)refStep;
      refStep = (Step)eResolveProxy(oldRefStep);
      if (refStep != oldRefStep)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, Ucm4iotPackage.EXTENSION_BLOCK__REF_STEP, oldRefStep, refStep));
      }
    }
    return refStep;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Step basicGetRefStep()
  {
    return refStep;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRefStep(Step newRefStep)
  {
    Step oldRefStep = refStep;
    refStep = newRefStep;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Ucm4iotPackage.EXTENSION_BLOCK__REF_STEP, oldRefStep, refStep));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isHasRangedRef()
  {
    return hasRangedRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHasRangedRef(boolean newHasRangedRef)
  {
    boolean oldHasRangedRef = hasRangedRef;
    hasRangedRef = newHasRangedRef;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Ucm4iotPackage.EXTENSION_BLOCK__HAS_RANGED_REF, oldHasRangedRef, hasRangedRef));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Step getEndRefStep()
  {
    if (endRefStep != null && endRefStep.eIsProxy())
    {
      InternalEObject oldEndRefStep = (InternalEObject)endRefStep;
      endRefStep = (Step)eResolveProxy(oldEndRefStep);
      if (endRefStep != oldEndRefStep)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, Ucm4iotPackage.EXTENSION_BLOCK__END_REF_STEP, oldEndRefStep, endRefStep));
      }
    }
    return endRefStep;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Step basicGetEndRefStep()
  {
    return endRefStep;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEndRefStep(Step newEndRefStep)
  {
    Step oldEndRefStep = endRefStep;
    endRefStep = newEndRefStep;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Ucm4iotPackage.EXTENSION_BLOCK__END_REF_STEP, oldEndRefStep, endRefStep));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Step> getSteps()
  {
    if (steps == null)
    {
      steps = new EObjectContainmentEList<Step>(Step.class, this, Ucm4iotPackage.EXTENSION_BLOCK__STEPS);
    }
    return steps;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Outcome getOutcome()
  {
    return outcome;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOutcome(Outcome newOutcome, NotificationChain msgs)
  {
    Outcome oldOutcome = outcome;
    outcome = newOutcome;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, Ucm4iotPackage.EXTENSION_BLOCK__OUTCOME, oldOutcome, newOutcome);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOutcome(Outcome newOutcome)
  {
    if (newOutcome != outcome)
    {
      NotificationChain msgs = null;
      if (outcome != null)
        msgs = ((InternalEObject)outcome).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - Ucm4iotPackage.EXTENSION_BLOCK__OUTCOME, null, msgs);
      if (newOutcome != null)
        msgs = ((InternalEObject)newOutcome).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - Ucm4iotPackage.EXTENSION_BLOCK__OUTCOME, null, msgs);
      msgs = basicSetOutcome(newOutcome, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, Ucm4iotPackage.EXTENSION_BLOCK__OUTCOME, newOutcome, newOutcome));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ExtensionBlock> getBlocks()
  {
    if (blocks == null)
    {
      blocks = new EObjectContainmentEList<ExtensionBlock>(ExtensionBlock.class, this, Ucm4iotPackage.EXTENSION_BLOCK__BLOCKS);
    }
    return blocks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case Ucm4iotPackage.EXTENSION_BLOCK__STEPS:
        return ((InternalEList<?>)getSteps()).basicRemove(otherEnd, msgs);
      case Ucm4iotPackage.EXTENSION_BLOCK__OUTCOME:
        return basicSetOutcome(null, msgs);
      case Ucm4iotPackage.EXTENSION_BLOCK__BLOCKS:
        return ((InternalEList<?>)getBlocks()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Ucm4iotPackage.EXTENSION_BLOCK__REF_STEP:
        if (resolve) return getRefStep();
        return basicGetRefStep();
      case Ucm4iotPackage.EXTENSION_BLOCK__HAS_RANGED_REF:
        return isHasRangedRef();
      case Ucm4iotPackage.EXTENSION_BLOCK__END_REF_STEP:
        if (resolve) return getEndRefStep();
        return basicGetEndRefStep();
      case Ucm4iotPackage.EXTENSION_BLOCK__STEPS:
        return getSteps();
      case Ucm4iotPackage.EXTENSION_BLOCK__OUTCOME:
        return getOutcome();
      case Ucm4iotPackage.EXTENSION_BLOCK__BLOCKS:
        return getBlocks();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Ucm4iotPackage.EXTENSION_BLOCK__REF_STEP:
        setRefStep((Step)newValue);
        return;
      case Ucm4iotPackage.EXTENSION_BLOCK__HAS_RANGED_REF:
        setHasRangedRef((Boolean)newValue);
        return;
      case Ucm4iotPackage.EXTENSION_BLOCK__END_REF_STEP:
        setEndRefStep((Step)newValue);
        return;
      case Ucm4iotPackage.EXTENSION_BLOCK__STEPS:
        getSteps().clear();
        getSteps().addAll((Collection<? extends Step>)newValue);
        return;
      case Ucm4iotPackage.EXTENSION_BLOCK__OUTCOME:
        setOutcome((Outcome)newValue);
        return;
      case Ucm4iotPackage.EXTENSION_BLOCK__BLOCKS:
        getBlocks().clear();
        getBlocks().addAll((Collection<? extends ExtensionBlock>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Ucm4iotPackage.EXTENSION_BLOCK__REF_STEP:
        setRefStep((Step)null);
        return;
      case Ucm4iotPackage.EXTENSION_BLOCK__HAS_RANGED_REF:
        setHasRangedRef(HAS_RANGED_REF_EDEFAULT);
        return;
      case Ucm4iotPackage.EXTENSION_BLOCK__END_REF_STEP:
        setEndRefStep((Step)null);
        return;
      case Ucm4iotPackage.EXTENSION_BLOCK__STEPS:
        getSteps().clear();
        return;
      case Ucm4iotPackage.EXTENSION_BLOCK__OUTCOME:
        setOutcome((Outcome)null);
        return;
      case Ucm4iotPackage.EXTENSION_BLOCK__BLOCKS:
        getBlocks().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Ucm4iotPackage.EXTENSION_BLOCK__REF_STEP:
        return refStep != null;
      case Ucm4iotPackage.EXTENSION_BLOCK__HAS_RANGED_REF:
        return hasRangedRef != HAS_RANGED_REF_EDEFAULT;
      case Ucm4iotPackage.EXTENSION_BLOCK__END_REF_STEP:
        return endRefStep != null;
      case Ucm4iotPackage.EXTENSION_BLOCK__STEPS:
        return steps != null && !steps.isEmpty();
      case Ucm4iotPackage.EXTENSION_BLOCK__OUTCOME:
        return outcome != null;
      case Ucm4iotPackage.EXTENSION_BLOCK__BLOCKS:
        return blocks != null && !blocks.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (hasRangedRef: ");
    result.append(hasRangedRef);
    result.append(')');
    return result.toString();
  }

} //ExtensionBlockImpl

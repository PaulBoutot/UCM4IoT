/**
 * generated by Xtext 2.25.0
 */
package mde.iot.ucm4iot.ucm4iot.util;

import mde.iot.ucm4iot.ucm4iot.Actor;
import mde.iot.ucm4iot.ucm4iot.AlternateBlock;
import mde.iot.ucm4iot.ucm4iot.ConditionControlStep;
import mde.iot.ucm4iot.ucm4iot.ContextExceptionMapping;
import mde.iot.ucm4iot.ucm4iot.DeviceActor;
import mde.iot.ucm4iot.ucm4iot.EnvironmentException;
import mde.iot.ucm4iot.ucm4iot.ExceptionalBlock;
import mde.iot.ucm4iot.ucm4iot.ExceptionalUseCase;
import mde.iot.ucm4iot.ucm4iot.ExtensionBlock;
import mde.iot.ucm4iot.ucm4iot.Extensions;
import mde.iot.ucm4iot.ucm4iot.HandlerUseCase;
import mde.iot.ucm4iot.ucm4iot.HardwareException;
import mde.iot.ucm4iot.ucm4iot.HumanActor;
import mde.iot.ucm4iot.ucm4iot.InteractionStep;
import mde.iot.ucm4iot.ucm4iot.InvocationStep;
import mde.iot.ucm4iot.ucm4iot.IoTUseCaseModel;
import mde.iot.ucm4iot.ucm4iot.MainScenario;
import mde.iot.ucm4iot.ucm4iot.NetworkException;
import mde.iot.ucm4iot.ucm4iot.Outcome;
import mde.iot.ucm4iot.ucm4iot.OutcomeContinues;
import mde.iot.ucm4iot.ucm4iot.OutcomeEnds;
import mde.iot.ucm4iot.ucm4iot.PhysicalEntityActor;
import mde.iot.ucm4iot.ucm4iot.PrimaryActor;
import mde.iot.ucm4iot.ucm4iot.SecondaryActor;
import mde.iot.ucm4iot.ucm4iot.SoftwareActor;
import mde.iot.ucm4iot.ucm4iot.SoftwareException;
import mde.iot.ucm4iot.ucm4iot.Step;
import mde.iot.ucm4iot.ucm4iot.Ucm4iotPackage;
import mde.iot.ucm4iot.ucm4iot.UseCase;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see mde.iot.ucm4iot.ucm4iot.Ucm4iotPackage
 * @generated
 */
public class Ucm4iotSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static Ucm4iotPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Ucm4iotSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = Ucm4iotPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case Ucm4iotPackage.IO_TUSE_CASE_MODEL:
      {
        IoTUseCaseModel ioTUseCaseModel = (IoTUseCaseModel)theEObject;
        T result = caseIoTUseCaseModel(ioTUseCaseModel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.USE_CASE:
      {
        UseCase useCase = (UseCase)theEObject;
        T result = caseUseCase(useCase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.EXCEPTIONAL_USE_CASE:
      {
        ExceptionalUseCase exceptionalUseCase = (ExceptionalUseCase)theEObject;
        T result = caseExceptionalUseCase(exceptionalUseCase);
        if (result == null) result = caseUseCase(exceptionalUseCase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.HANDLER_USE_CASE:
      {
        HandlerUseCase handlerUseCase = (HandlerUseCase)theEObject;
        T result = caseHandlerUseCase(handlerUseCase);
        if (result == null) result = caseUseCase(handlerUseCase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.MAIN_SCENARIO:
      {
        MainScenario mainScenario = (MainScenario)theEObject;
        T result = caseMainScenario(mainScenario);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.EXTENSIONS:
      {
        Extensions extensions = (Extensions)theEObject;
        T result = caseExtensions(extensions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.EXTENSION_BLOCK:
      {
        ExtensionBlock extensionBlock = (ExtensionBlock)theEObject;
        T result = caseExtensionBlock(extensionBlock);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.ALTERNATE_BLOCK:
      {
        AlternateBlock alternateBlock = (AlternateBlock)theEObject;
        T result = caseAlternateBlock(alternateBlock);
        if (result == null) result = caseExtensionBlock(alternateBlock);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.EXCEPTIONAL_BLOCK:
      {
        ExceptionalBlock exceptionalBlock = (ExceptionalBlock)theEObject;
        T result = caseExceptionalBlock(exceptionalBlock);
        if (result == null) result = caseExtensionBlock(exceptionalBlock);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.OUTCOME:
      {
        Outcome outcome = (Outcome)theEObject;
        T result = caseOutcome(outcome);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.OUTCOME_ENDS:
      {
        OutcomeEnds outcomeEnds = (OutcomeEnds)theEObject;
        T result = caseOutcomeEnds(outcomeEnds);
        if (result == null) result = caseOutcome(outcomeEnds);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.OUTCOME_CONTINUES:
      {
        OutcomeContinues outcomeContinues = (OutcomeContinues)theEObject;
        T result = caseOutcomeContinues(outcomeContinues);
        if (result == null) result = caseOutcome(outcomeContinues);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.STEP:
      {
        Step step = (Step)theEObject;
        T result = caseStep(step);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.INTERACTION_STEP:
      {
        InteractionStep interactionStep = (InteractionStep)theEObject;
        T result = caseInteractionStep(interactionStep);
        if (result == null) result = caseStep(interactionStep);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.INVOCATION_STEP:
      {
        InvocationStep invocationStep = (InvocationStep)theEObject;
        T result = caseInvocationStep(invocationStep);
        if (result == null) result = caseStep(invocationStep);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.CONDITION_CONTROL_STEP:
      {
        ConditionControlStep conditionControlStep = (ConditionControlStep)theEObject;
        T result = caseConditionControlStep(conditionControlStep);
        if (result == null) result = caseStep(conditionControlStep);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.EXCEPTION:
      {
        mde.iot.ucm4iot.ucm4iot.Exception exception = (mde.iot.ucm4iot.ucm4iot.Exception)theEObject;
        T result = caseException(exception);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.ENVIRONMENT_EXCEPTION:
      {
        EnvironmentException environmentException = (EnvironmentException)theEObject;
        T result = caseEnvironmentException(environmentException);
        if (result == null) result = caseException(environmentException);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.NETWORK_EXCEPTION:
      {
        NetworkException networkException = (NetworkException)theEObject;
        T result = caseNetworkException(networkException);
        if (result == null) result = caseException(networkException);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.HARDWARE_EXCEPTION:
      {
        HardwareException hardwareException = (HardwareException)theEObject;
        T result = caseHardwareException(hardwareException);
        if (result == null) result = caseException(hardwareException);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.SOFTWARE_EXCEPTION:
      {
        SoftwareException softwareException = (SoftwareException)theEObject;
        T result = caseSoftwareException(softwareException);
        if (result == null) result = caseException(softwareException);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.CONTEXT_EXCEPTION_MAPPING:
      {
        ContextExceptionMapping contextExceptionMapping = (ContextExceptionMapping)theEObject;
        T result = caseContextExceptionMapping(contextExceptionMapping);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.ACTOR:
      {
        Actor actor = (Actor)theEObject;
        T result = caseActor(actor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.PRIMARY_ACTOR:
      {
        PrimaryActor primaryActor = (PrimaryActor)theEObject;
        T result = casePrimaryActor(primaryActor);
        if (result == null) result = caseActor(primaryActor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.SECONDARY_ACTOR:
      {
        SecondaryActor secondaryActor = (SecondaryActor)theEObject;
        T result = caseSecondaryActor(secondaryActor);
        if (result == null) result = caseActor(secondaryActor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.HUMAN_ACTOR:
      {
        HumanActor humanActor = (HumanActor)theEObject;
        T result = caseHumanActor(humanActor);
        if (result == null) result = casePrimaryActor(humanActor);
        if (result == null) result = caseSecondaryActor(humanActor);
        if (result == null) result = caseActor(humanActor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.SOFTWARE_ACTOR:
      {
        SoftwareActor softwareActor = (SoftwareActor)theEObject;
        T result = caseSoftwareActor(softwareActor);
        if (result == null) result = casePrimaryActor(softwareActor);
        if (result == null) result = caseSecondaryActor(softwareActor);
        if (result == null) result = caseActor(softwareActor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.DEVICE_ACTOR:
      {
        DeviceActor deviceActor = (DeviceActor)theEObject;
        T result = caseDeviceActor(deviceActor);
        if (result == null) result = caseSecondaryActor(deviceActor);
        if (result == null) result = caseActor(deviceActor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case Ucm4iotPackage.PHYSICAL_ENTITY_ACTOR:
      {
        PhysicalEntityActor physicalEntityActor = (PhysicalEntityActor)theEObject;
        T result = casePhysicalEntityActor(physicalEntityActor);
        if (result == null) result = caseSecondaryActor(physicalEntityActor);
        if (result == null) result = caseActor(physicalEntityActor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Io TUse Case Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Io TUse Case Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIoTUseCaseModel(IoTUseCaseModel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Use Case</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Use Case</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUseCase(UseCase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Exceptional Use Case</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Exceptional Use Case</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExceptionalUseCase(ExceptionalUseCase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Handler Use Case</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Handler Use Case</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHandlerUseCase(HandlerUseCase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Main Scenario</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Main Scenario</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMainScenario(MainScenario object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Extensions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Extensions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExtensions(Extensions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Extension Block</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Extension Block</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExtensionBlock(ExtensionBlock object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Alternate Block</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Alternate Block</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAlternateBlock(AlternateBlock object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Exceptional Block</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Exceptional Block</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExceptionalBlock(ExceptionalBlock object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Outcome</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Outcome</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOutcome(Outcome object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Outcome Ends</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Outcome Ends</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOutcomeEnds(OutcomeEnds object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Outcome Continues</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Outcome Continues</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOutcomeContinues(OutcomeContinues object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Step</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Step</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStep(Step object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Interaction Step</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Interaction Step</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInteractionStep(InteractionStep object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Invocation Step</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Invocation Step</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInvocationStep(InvocationStep object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Condition Control Step</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Condition Control Step</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConditionControlStep(ConditionControlStep object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Exception</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Exception</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseException(mde.iot.ucm4iot.ucm4iot.Exception object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Environment Exception</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Environment Exception</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseEnvironmentException(EnvironmentException object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Network Exception</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Network Exception</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNetworkException(NetworkException object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Hardware Exception</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Hardware Exception</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHardwareException(HardwareException object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Software Exception</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Software Exception</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSoftwareException(SoftwareException object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Context Exception Mapping</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Context Exception Mapping</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseContextExceptionMapping(ContextExceptionMapping object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Actor</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Actor</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseActor(Actor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Primary Actor</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Primary Actor</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePrimaryActor(PrimaryActor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Secondary Actor</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Secondary Actor</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSecondaryActor(SecondaryActor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Human Actor</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Human Actor</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHumanActor(HumanActor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Software Actor</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Software Actor</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSoftwareActor(SoftwareActor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Device Actor</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Device Actor</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDeviceActor(DeviceActor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Physical Entity Actor</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Physical Entity Actor</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePhysicalEntityActor(PhysicalEntityActor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //Ucm4iotSwitch

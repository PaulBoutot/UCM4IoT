/*
 * generated by Xtext 2.25.0
 */
package mde.iot.ucm4iot.serializer;

import com.google.inject.Inject;
import java.util.List;
import mde.iot.ucm4iot.services.Ucm4iotGrammarAccess;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public class Ucm4iotSyntacticSequencer extends AbstractSyntacticSequencer {

	protected Ucm4iotGrammarAccess grammarAccess;
	protected AbstractElementAlias match_DeviceActor_ACTUATORKeyword_0_1_or_READERKeyword_0_3_or_SENSORKeyword_0_0_or_TAGKeyword_0_2;
	protected AbstractElementAlias match_ExceptionalUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a;
	protected AbstractElementAlias match_ExceptionalUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a;
	protected AbstractElementAlias match_ExceptionalUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a;
	protected AbstractElementAlias match_ExceptionalUseCase_____KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a;
	protected AbstractElementAlias match_ExceptionalUseCase_____NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1__a;
	protected AbstractElementAlias match_ExceptionalUseCase_____NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a_KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1__a;
	protected AbstractElementAlias match_ExceptionalUseCase_____NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_______KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1__a;
	protected AbstractElementAlias match_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a;
	protected AbstractElementAlias match_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a;
	protected AbstractElementAlias match_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a;
	protected AbstractElementAlias match_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a;
	protected AbstractElementAlias match_HandlerUseCase_____KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a;
	protected AbstractElementAlias match_HandlerUseCase_____NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1__a;
	protected AbstractElementAlias match_HandlerUseCase_____NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a_KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1__a;
	protected AbstractElementAlias match_HandlerUseCase_____NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_______KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1__a;
	protected AbstractElementAlias match_HandlerUseCase_____NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1__a;
	protected AbstractElementAlias match_IoTUseCaseModel___ExclamationMarkKeyword_0_1_KeywordStandardModeParserRuleCall_0_2_ColonKeyword_0_3_OffKeyword_0_4_1__q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (Ucm4iotGrammarAccess) access;
		match_DeviceActor_ACTUATORKeyword_0_1_or_READERKeyword_0_3_or_SENSORKeyword_0_0_or_TAGKeyword_0_2 = new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getDeviceActorAccess().getACTUATORKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getDeviceActorAccess().getREADERKeyword_0_3()), new TokenAlias(false, false, grammarAccess.getDeviceActorAccess().getSENSORKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getDeviceActorAccess().getTAGKeyword_0_2()));
		match_ExceptionalUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a = new AlternativeAlias(true, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getKeywordFacilitatorActorParserRuleCall_3_8_0()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getColonKeyword_3_8_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNoneParserRuleCall_3_8_2_0_1()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNotApplicableParserRuleCall_3_8_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getKeywordPrimaryActorParserRuleCall_3_6_0()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getColonKeyword_3_6_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNoneParserRuleCall_3_6_2_0_1()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNotApplicableParserRuleCall_3_6_2_0_0()))));
		match_ExceptionalUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a = new AlternativeAlias(true, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getKeywordFacilitatorActorParserRuleCall_3_8_0()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getColonKeyword_3_8_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNoneParserRuleCall_3_8_2_0_1()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNotApplicableParserRuleCall_3_8_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getKeywordPrimaryActorParserRuleCall_3_6_0()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getColonKeyword_3_6_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNoneParserRuleCall_3_6_2_0_1()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNotApplicableParserRuleCall_3_6_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getKeywordSecondaryActorParserRuleCall_3_7_0()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getColonKeyword_3_7_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNoneParserRuleCall_3_7_2_0_1()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNotApplicableParserRuleCall_3_7_2_0_0()))));
		match_ExceptionalUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a = new AlternativeAlias(true, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getKeywordFacilitatorActorParserRuleCall_3_8_0()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getColonKeyword_3_8_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNoneParserRuleCall_3_8_2_0_1()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNotApplicableParserRuleCall_3_8_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getKeywordSecondaryActorParserRuleCall_3_7_0()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getColonKeyword_3_7_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNoneParserRuleCall_3_7_2_0_1()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNotApplicableParserRuleCall_3_7_2_0_0()))));
		match_ExceptionalUseCase_____KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a = new AlternativeAlias(true, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getKeywordPrimaryActorParserRuleCall_3_6_0()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getColonKeyword_3_6_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNoneParserRuleCall_3_6_2_0_1()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNotApplicableParserRuleCall_3_6_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getKeywordSecondaryActorParserRuleCall_3_7_0()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getColonKeyword_3_7_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNoneParserRuleCall_3_7_2_0_1()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNotApplicableParserRuleCall_3_7_2_0_0()))));
		match_ExceptionalUseCase_____NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1__a = new GroupAlias(true, true, new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNoneParserRuleCall_3_6_2_0_1()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNotApplicableParserRuleCall_3_6_2_0_0())), new AlternativeAlias(true, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getKeywordFacilitatorActorParserRuleCall_3_8_0()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getColonKeyword_3_8_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNoneParserRuleCall_3_8_2_0_1()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNotApplicableParserRuleCall_3_8_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getKeywordSecondaryActorParserRuleCall_3_7_0()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getColonKeyword_3_7_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNoneParserRuleCall_3_7_2_0_1()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNotApplicableParserRuleCall_3_7_2_0_0())))), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getKeywordPrimaryActorParserRuleCall_3_6_0()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getColonKeyword_3_6_1()));
		match_ExceptionalUseCase_____NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a_KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1__a = new GroupAlias(true, true, new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNoneParserRuleCall_3_7_2_0_1()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNotApplicableParserRuleCall_3_7_2_0_0())), new AlternativeAlias(true, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getKeywordFacilitatorActorParserRuleCall_3_8_0()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getColonKeyword_3_8_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNoneParserRuleCall_3_8_2_0_1()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNotApplicableParserRuleCall_3_8_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getKeywordPrimaryActorParserRuleCall_3_6_0()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getColonKeyword_3_6_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNoneParserRuleCall_3_6_2_0_1()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNotApplicableParserRuleCall_3_6_2_0_0())))), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getKeywordSecondaryActorParserRuleCall_3_7_0()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getColonKeyword_3_7_1()));
		match_ExceptionalUseCase_____NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_______KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1__a = new GroupAlias(true, true, new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNoneParserRuleCall_3_8_2_0_1()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNotApplicableParserRuleCall_3_8_2_0_0())), new AlternativeAlias(true, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getKeywordPrimaryActorParserRuleCall_3_6_0()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getColonKeyword_3_6_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNoneParserRuleCall_3_6_2_0_1()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNotApplicableParserRuleCall_3_6_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getKeywordSecondaryActorParserRuleCall_3_7_0()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getColonKeyword_3_7_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNoneParserRuleCall_3_7_2_0_1()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getNotApplicableParserRuleCall_3_7_2_0_0())))), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getKeywordFacilitatorActorParserRuleCall_3_8_0()), new TokenAlias(false, false, grammarAccess.getExceptionalUseCaseAccess().getColonKeyword_3_8_1()));
		match_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a = new AlternativeAlias(true, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordFacilitatorActorParserRuleCall_3_8_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_8_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_8_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_8_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordHandlerClassParserRuleCall_3_9_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_9_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_9_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_9_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordPrimaryActorParserRuleCall_3_6_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_6_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_6_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_6_2_0_0()))));
		match_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a = new AlternativeAlias(true, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordFacilitatorActorParserRuleCall_3_8_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_8_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_8_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_8_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordHandlerClassParserRuleCall_3_9_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_9_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_9_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_9_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordPrimaryActorParserRuleCall_3_6_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_6_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_6_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_6_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordSecondaryActorParserRuleCall_3_7_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_7_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_7_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_7_2_0_0()))));
		match_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a = new AlternativeAlias(true, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordFacilitatorActorParserRuleCall_3_8_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_8_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_8_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_8_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordHandlerClassParserRuleCall_3_9_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_9_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_9_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_9_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordSecondaryActorParserRuleCall_3_7_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_7_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_7_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_7_2_0_0()))));
		match_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a = new AlternativeAlias(true, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordFacilitatorActorParserRuleCall_3_8_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_8_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_8_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_8_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordPrimaryActorParserRuleCall_3_6_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_6_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_6_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_6_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordSecondaryActorParserRuleCall_3_7_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_7_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_7_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_7_2_0_0()))));
		match_HandlerUseCase_____KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a = new AlternativeAlias(true, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordHandlerClassParserRuleCall_3_9_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_9_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_9_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_9_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordPrimaryActorParserRuleCall_3_6_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_6_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_6_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_6_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordSecondaryActorParserRuleCall_3_7_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_7_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_7_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_7_2_0_0()))));
		match_HandlerUseCase_____NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1__a = new GroupAlias(true, true, new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_6_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_6_2_0_0())), new AlternativeAlias(true, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordFacilitatorActorParserRuleCall_3_8_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_8_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_8_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_8_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordHandlerClassParserRuleCall_3_9_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_9_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_9_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_9_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordSecondaryActorParserRuleCall_3_7_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_7_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_7_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_7_2_0_0())))), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordPrimaryActorParserRuleCall_3_6_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_6_1()));
		match_HandlerUseCase_____NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a_KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1__a = new GroupAlias(true, true, new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_7_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_7_2_0_0())), new AlternativeAlias(true, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordFacilitatorActorParserRuleCall_3_8_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_8_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_8_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_8_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordHandlerClassParserRuleCall_3_9_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_9_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_9_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_9_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordPrimaryActorParserRuleCall_3_6_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_6_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_6_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_6_2_0_0())))), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordSecondaryActorParserRuleCall_3_7_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_7_1()));
		match_HandlerUseCase_____NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_______KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1__a = new GroupAlias(true, true, new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_8_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_8_2_0_0())), new AlternativeAlias(true, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordHandlerClassParserRuleCall_3_9_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_9_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_9_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_9_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordPrimaryActorParserRuleCall_3_6_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_6_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_6_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_6_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordSecondaryActorParserRuleCall_3_7_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_7_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_7_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_7_2_0_0())))), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordFacilitatorActorParserRuleCall_3_8_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_8_1()));
		match_HandlerUseCase_____NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1__a = new GroupAlias(true, true, new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_9_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_9_2_0_0())), new AlternativeAlias(true, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordFacilitatorActorParserRuleCall_3_8_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_8_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_8_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_8_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordPrimaryActorParserRuleCall_3_6_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_6_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_6_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_6_2_0_0()))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordSecondaryActorParserRuleCall_3_7_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_7_1()), new AlternativeAlias(false, false, new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNoneParserRuleCall_3_7_2_0_1()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getNotApplicableParserRuleCall_3_7_2_0_0())))), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getKeywordHandlerClassParserRuleCall_3_9_0()), new TokenAlias(false, false, grammarAccess.getHandlerUseCaseAccess().getColonKeyword_3_9_1()));
		match_IoTUseCaseModel___ExclamationMarkKeyword_0_1_KeywordStandardModeParserRuleCall_0_2_ColonKeyword_0_3_OffKeyword_0_4_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getIoTUseCaseModelAccess().getExclamationMarkKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getIoTUseCaseModelAccess().getKeywordStandardModeParserRuleCall_0_2()), new TokenAlias(false, false, grammarAccess.getIoTUseCaseModelAccess().getColonKeyword_0_3()), new TokenAlias(false, false, grammarAccess.getIoTUseCaseModelAccess().getOffKeyword_0_4_1()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getIGNORE_STRINGRule())
			return getIGNORE_STRINGToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordAlternateBlockRule())
			return getKeywordAlternateBlockToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordChildListBeginsRule())
			return getKeywordChildListBeginsToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordChildListEndsRule())
			return getKeywordChildListEndsToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordContextExceptionRule())
			return getKeywordContextExceptionToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordEnvironmentExceptionRule())
			return getKeywordEnvironmentExceptionToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordExceptionRule())
			return getKeywordExceptionToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordExceptionalBlockRule())
			return getKeywordExceptionalBlockToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordExceptionalUseCaseRule())
			return getKeywordExceptionalUseCaseToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordExtensionsRule())
			return getKeywordExtensionsToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordFacilitatorActorRule())
			return getKeywordFacilitatorActorToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordHandlerClassRule())
			return getKeywordHandlerClassToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordHandlerUseCaseRule())
			return getKeywordHandlerUseCaseToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordHardwareExceptionRule())
			return getKeywordHardwareExceptionToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordIntentionRule())
			return getKeywordIntentionToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordLevelRule())
			return getKeywordLevelToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordMainSuccessScenarioRule())
			return getKeywordMainSuccessScenarioToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordMultiplicityRule())
			return getKeywordMultiplicityToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordNetworkExceptionRule())
			return getKeywordNetworkExceptionToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordOutcomeContRule())
			return getKeywordOutcomeContToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordOutcomeEndsRule())
			return getKeywordOutcomeEndsToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordPostconditionRule())
			return getKeywordPostconditionToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordPreconditionRule())
			return getKeywordPreconditionToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordPrimaryActorRule())
			return getKeywordPrimaryActorToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordScopeRule())
			return getKeywordScopeToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordSecondaryActorRule())
			return getKeywordSecondaryActorToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordSoftwareExceptionRule())
			return getKeywordSoftwareExceptionToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getKeywordStandardModeRule())
			return getKeywordStandardModeToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getNoneRule())
			return getNoneToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getNotApplicableRule())
			return getNotApplicableToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * terminal IGNORE_STRING:
	 *     '#' -> '#';
	 */
	protected String getIGNORE_STRINGToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "#";
	}
	
	/**
	 * KeywordAlternateBlock: 
	 * 	('Alternative' | 'alternative');
	 */
	protected String getKeywordAlternateBlockToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Alternative";
	}
	
	/**
	 * KeywordChildListBegins:
	 * 	('Nested' | 'nested')
	 * 	('Extensions' | 'extensions')
	 * 	('Begin' | 'begin');
	 */
	protected String getKeywordChildListBeginsToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Nested Extensions Begin";
	}
	
	/**
	 * KeywordChildListEnds:
	 * 	('Nested' | 'nested')
	 * 	('Extensions' | 'extensions')
	 * 	('Ends' | 'ends');
	 */
	protected String getKeywordChildListEndsToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Nested Extensions Ends";
	}
	
	/**
	 * KeywordContextException:
	 * 	('Contexts' | 'contexts')
	 * 	('And' | 'and')
	 * 	('Exceptions' | 'exceptions');
	 */
	protected String getKeywordContextExceptionToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Contexts And Exceptions";
	}
	
	/**
	 * KeywordEnvironmentException: 'ENVIRONMENT_EXCEPTION';
	 */
	protected String getKeywordEnvironmentExceptionToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "ENVIRONMENT_EXCEPTION";
	}
	
	/**
	 * KeywordException: (KeywordEnvironmentException | KeywordNetworkException | KeywordHardwareException | KeywordSoftwareException);
	 */
	protected String getKeywordExceptionToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "ENVIRONMENT_EXCEPTION";
	}
	
	/**
	 * KeywordExceptionalBlock:
	 * 	('Exception' | 'exception');
	 */
	protected String getKeywordExceptionalBlockToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Exception";
	}
	
	/**
	 * KeywordExceptionalUseCase: 
	 * 	('Use' | 'use')
	 * 	('Case' | 'case');
	 */
	protected String getKeywordExceptionalUseCaseToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Use Case";
	}
	
	/**
	 * KeywordExtensions:
	 * 	('Extensions' | 'extensions');
	 */
	protected String getKeywordExtensionsToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Extensions";
	}
	
	/**
	 * KeywordFacilitatorActor: 
	 * 	('Facilitator' | 'facilitator')
	 * 	('Actor' | 'actor');
	 */
	protected String getKeywordFacilitatorActorToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Facilitator Actor";
	}
	
	/**
	 * KeywordHandlerClass:
	 * 	('Handler' | 'handler')
	 * 	('Class' | 'class');
	 */
	protected String getKeywordHandlerClassToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Handler Class";
	}
	
	/**
	 * KeywordHandlerUseCase:
	 * 	('Handler' | 'handler')
	 * 	('Use' | 'use')
	 * 	('Case' | 'case');
	 */
	protected String getKeywordHandlerUseCaseToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Handler Use Case";
	}
	
	/**
	 * KeywordHardwareException:    'HARDWARE_EXCEPTION';
	 */
	protected String getKeywordHardwareExceptionToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "HARDWARE_EXCEPTION";
	}
	
	/**
	 * KeywordIntention:
	 * 	('Intention' | 'intention');
	 */
	protected String getKeywordIntentionToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Intention";
	}
	
	/**
	 * KeywordLevel: 
	 * 	('Level' | 'level');
	 */
	protected String getKeywordLevelToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Level";
	}
	
	/**
	 * KeywordMainSuccessScenario:
	 * 	('Main' | 'main')
	 * 	('Success' | 'success')?
	 * 	('Scenario' | 'scenario')?;
	 */
	protected String getKeywordMainSuccessScenarioToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Main";
	}
	
	/**
	 * KeywordMultiplicity:
	 * 	('Multiplicity' | 'multiplicity');
	 */
	protected String getKeywordMultiplicityToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Multiplicity";
	}
	
	/**
	 * KeywordNetworkException:     'NETWORK_EXCEPTION';
	 */
	protected String getKeywordNetworkExceptionToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "NETWORK_EXCEPTION";
	}
	
	/**
	 * KeywordOutcomeCont:
	 * 	('Use' | 'use')
	 * 	('Case' | 'case')
	 * 	('Continues' | 'continues')
	 * 	('At' | 'at')
	 * 	('Step' | 'step');
	 */
	protected String getKeywordOutcomeContToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Use Case Continues At Step";
	}
	
	/**
	 * KeywordOutcomeEnds:
	 * 	('Use' | 'use')
	 * 	('Case' | 'case')
	 * 	('Ends' | 'ends')
	 * 	('In' | 'in');
	 */
	protected String getKeywordOutcomeEndsToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Use Case Ends In";
	}
	
	/**
	 * KeywordPostcondition:
	 * 	('Postcondition' | 'postcondition');
	 */
	protected String getKeywordPostconditionToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Postcondition";
	}
	
	/**
	 * KeywordPrecondition:
	 * 	('Precondition'  | 'precondition');
	 */
	protected String getKeywordPreconditionToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Precondition";
	}
	
	/**
	 * KeywordPrimaryActor:
	 * 	('Primary' | 'primary')
	 * 	('Actor' | 'actor');
	 */
	protected String getKeywordPrimaryActorToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Primary Actor";
	}
	
	/**
	 * KeywordScope:
	 * 	('Scope' | 'scope');
	 */
	protected String getKeywordScopeToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Scope";
	}
	
	/**
	 * KeywordSecondaryActor:
	 * 	('Secondary' | 'secondary')
	 * 	('Actor' | 'actor');
	 */
	protected String getKeywordSecondaryActorToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Secondary Actor";
	}
	
	/**
	 * KeywordSoftwareException:    'SOFTWARE_EXCEPTION';
	 */
	protected String getKeywordSoftwareExceptionToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "SOFTWARE_EXCEPTION";
	}
	
	/**
	 * KeywordStandardMode:
	 * 	('Standard' | 'standard')
	 * 	('Mode' | 'mode');
	 */
	protected String getKeywordStandardModeToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "Standard Mode";
	}
	
	/**
	 * None: 'None' | 'none';
	 */
	protected String getNoneToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "None";
	}
	
	/**
	 * NotApplicable: 'N/A' | 'n/a';
	 */
	protected String getNotApplicableToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "N/A";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_DeviceActor_ACTUATORKeyword_0_1_or_READERKeyword_0_3_or_SENSORKeyword_0_0_or_TAGKeyword_0_2.equals(syntax))
				emit_DeviceActor_ACTUATORKeyword_0_1_or_READERKeyword_0_3_or_SENSORKeyword_0_0_or_TAGKeyword_0_2(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ExceptionalUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a.equals(syntax))
				emit_ExceptionalUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ExceptionalUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a.equals(syntax))
				emit_ExceptionalUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ExceptionalUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a.equals(syntax))
				emit_ExceptionalUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ExceptionalUseCase_____KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a.equals(syntax))
				emit_ExceptionalUseCase_____KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ExceptionalUseCase_____NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1__a.equals(syntax))
				emit_ExceptionalUseCase_____NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ExceptionalUseCase_____NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a_KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1__a.equals(syntax))
				emit_ExceptionalUseCase_____NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a_KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_ExceptionalUseCase_____NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_______KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1__a.equals(syntax))
				emit_ExceptionalUseCase_____NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_______KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a.equals(syntax))
				emit_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a.equals(syntax))
				emit_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a.equals(syntax))
				emit_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a.equals(syntax))
				emit_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HandlerUseCase_____KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a.equals(syntax))
				emit_HandlerUseCase_____KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HandlerUseCase_____NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1__a.equals(syntax))
				emit_HandlerUseCase_____NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HandlerUseCase_____NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a_KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1__a.equals(syntax))
				emit_HandlerUseCase_____NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a_KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HandlerUseCase_____NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_______KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1__a.equals(syntax))
				emit_HandlerUseCase_____NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_______KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_HandlerUseCase_____NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1__a.equals(syntax))
				emit_HandlerUseCase_____NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_IoTUseCaseModel___ExclamationMarkKeyword_0_1_KeywordStandardModeParserRuleCall_0_2_ColonKeyword_0_3_OffKeyword_0_4_1__q.equals(syntax))
				emit_IoTUseCaseModel___ExclamationMarkKeyword_0_1_KeywordStandardModeParserRuleCall_0_2_ColonKeyword_0_3_OffKeyword_0_4_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     'SENSOR' | 'ACTUATOR' | 'TAG' | 'READER'
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) '::' name=ID
	 */
	protected void emit_DeviceActor_ACTUATORKeyword_0_1_or_READERKeyword_0_3_or_SENSORKeyword_0_0_or_TAGKeyword_0_2(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))*
	 *
	 * This ambiguous syntax occurs at:
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     intent=STRING (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     level=Level (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     multiplicity=STRING (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     name=ID (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     postcondition=STRING (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     precondition=STRING (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     primaryActor=PrimaryActor (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     scope=ID (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 */
	protected void emit_ExceptionalUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (KeywordPrimaryActor ':' (NotApplicable | None)) | 
	  *         (KeywordSecondaryActor ':' (NotApplicable | None)) | 
	  *         (KeywordFacilitatorActor ':' (NotApplicable | None))
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     facilitatorActors+=SecondaryActor (ambiguity) (rule end)
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordIntention ':' intent=STRING
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordLevel ':' level=Level
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordScope ':' scope=ID
	 *     intent=STRING (ambiguity) (rule end)
	 *     intent=STRING (ambiguity) KeywordIntention ':' intent=STRING
	 *     intent=STRING (ambiguity) KeywordLevel ':' level=Level
	 *     intent=STRING (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     intent=STRING (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     intent=STRING (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     intent=STRING (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     intent=STRING (ambiguity) KeywordScope ':' scope=ID
	 *     level=Level (ambiguity) (rule end)
	 *     level=Level (ambiguity) KeywordIntention ':' intent=STRING
	 *     level=Level (ambiguity) KeywordLevel ':' level=Level
	 *     level=Level (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     level=Level (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     level=Level (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     level=Level (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     level=Level (ambiguity) KeywordScope ':' scope=ID
	 *     multiplicity=STRING (ambiguity) (rule end)
	 *     multiplicity=STRING (ambiguity) KeywordIntention ':' intent=STRING
	 *     multiplicity=STRING (ambiguity) KeywordLevel ':' level=Level
	 *     multiplicity=STRING (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     multiplicity=STRING (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     multiplicity=STRING (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     multiplicity=STRING (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     multiplicity=STRING (ambiguity) KeywordScope ':' scope=ID
	 *     name=ID (ambiguity) (rule end)
	 *     name=ID (ambiguity) KeywordIntention ':' intent=STRING
	 *     name=ID (ambiguity) KeywordLevel ':' level=Level
	 *     name=ID (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     name=ID (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     name=ID (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     name=ID (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     name=ID (ambiguity) KeywordScope ':' scope=ID
	 *     postcondition=STRING (ambiguity) (rule end)
	 *     postcondition=STRING (ambiguity) KeywordIntention ':' intent=STRING
	 *     postcondition=STRING (ambiguity) KeywordLevel ':' level=Level
	 *     postcondition=STRING (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     postcondition=STRING (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     postcondition=STRING (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     postcondition=STRING (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     postcondition=STRING (ambiguity) KeywordScope ':' scope=ID
	 *     precondition=STRING (ambiguity) (rule end)
	 *     precondition=STRING (ambiguity) KeywordIntention ':' intent=STRING
	 *     precondition=STRING (ambiguity) KeywordLevel ':' level=Level
	 *     precondition=STRING (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     precondition=STRING (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     precondition=STRING (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     precondition=STRING (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     precondition=STRING (ambiguity) KeywordScope ':' scope=ID
	 *     primaryActor=PrimaryActor (ambiguity) (rule end)
	 *     primaryActor=PrimaryActor (ambiguity) KeywordIntention ':' intent=STRING
	 *     primaryActor=PrimaryActor (ambiguity) KeywordLevel ':' level=Level
	 *     primaryActor=PrimaryActor (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     primaryActor=PrimaryActor (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     primaryActor=PrimaryActor (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     primaryActor=PrimaryActor (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     primaryActor=PrimaryActor (ambiguity) KeywordScope ':' scope=ID
	 *     scope=ID (ambiguity) (rule end)
	 *     scope=ID (ambiguity) KeywordIntention ':' intent=STRING
	 *     scope=ID (ambiguity) KeywordLevel ':' level=Level
	 *     scope=ID (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     scope=ID (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     scope=ID (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     scope=ID (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     scope=ID (ambiguity) KeywordScope ':' scope=ID
	 *     secondaryActors+=SecondaryActor (ambiguity) (rule end)
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordIntention ':' intent=STRING
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordLevel ':' level=Level
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordScope ':' scope=ID
	 */
	protected void emit_ExceptionalUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))*
	 *
	 * This ambiguous syntax occurs at:
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     intent=STRING (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     level=Level (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     multiplicity=STRING (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     name=ID (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     postcondition=STRING (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     precondition=STRING (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     primaryActor=PrimaryActor (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     scope=ID (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 */
	protected void emit_ExceptionalUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)))*
	 *
	 * This ambiguous syntax occurs at:
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     intent=STRING (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     level=Level (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     multiplicity=STRING (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     name=ID (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     postcondition=STRING (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     precondition=STRING (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     primaryActor=PrimaryActor (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     scope=ID (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 */
	protected void emit_ExceptionalUseCase_____KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (NotApplicable | None) 
	  *         ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* 
	  *         KeywordPrimaryActor 
	  *         ':'
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     facilitatorActors+=SecondaryActor ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* KeywordPrimaryActor ':' (ambiguity) primaryActor=PrimaryActor
	 *     intent=STRING ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* KeywordPrimaryActor ':' (ambiguity) primaryActor=PrimaryActor
	 *     level=Level ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* KeywordPrimaryActor ':' (ambiguity) primaryActor=PrimaryActor
	 *     multiplicity=STRING ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* KeywordPrimaryActor ':' (ambiguity) primaryActor=PrimaryActor
	 *     name=ID ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* KeywordPrimaryActor ':' (ambiguity) primaryActor=PrimaryActor
	 *     postcondition=STRING ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* KeywordPrimaryActor ':' (ambiguity) primaryActor=PrimaryActor
	 *     precondition=STRING ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* KeywordPrimaryActor ':' (ambiguity) primaryActor=PrimaryActor
	 *     primaryActor=PrimaryActor ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* KeywordPrimaryActor ':' (ambiguity) primaryActor=PrimaryActor
	 *     scope=ID ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* KeywordPrimaryActor ':' (ambiguity) primaryActor=PrimaryActor
	 *     secondaryActors+=SecondaryActor ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* KeywordPrimaryActor ':' (ambiguity) primaryActor=PrimaryActor
	 */
	protected void emit_ExceptionalUseCase_____NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (NotApplicable | None) 
	  *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* 
	  *         KeywordSecondaryActor 
	  *         ':'
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     (
	 *         facilitatorActors+=SecondaryActor 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* 
	 *         KeywordSecondaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         secondaryActors+=SecondaryActor
	 *     )
	 *     (
	 *         secondaryActors+=SecondaryActor 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* 
	 *         KeywordSecondaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         secondaryActors+=SecondaryActor
	 *     )
	 *     intent=STRING ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* KeywordSecondaryActor ':' (ambiguity) secondaryActors+=SecondaryActor
	 *     level=Level ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* KeywordSecondaryActor ':' (ambiguity) secondaryActors+=SecondaryActor
	 *     multiplicity=STRING ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* KeywordSecondaryActor ':' (ambiguity) secondaryActors+=SecondaryActor
	 *     name=ID ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* KeywordSecondaryActor ':' (ambiguity) secondaryActors+=SecondaryActor
	 *     postcondition=STRING ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* KeywordSecondaryActor ':' (ambiguity) secondaryActors+=SecondaryActor
	 *     precondition=STRING ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* KeywordSecondaryActor ':' (ambiguity) secondaryActors+=SecondaryActor
	 *     primaryActor=PrimaryActor ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* KeywordSecondaryActor ':' (ambiguity) secondaryActors+=SecondaryActor
	 *     scope=ID ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* KeywordSecondaryActor ':' (ambiguity) secondaryActors+=SecondaryActor
	 */
	protected void emit_ExceptionalUseCase_____NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a_KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (NotApplicable | None) 
	  *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)))* 
	  *         KeywordFacilitatorActor 
	  *         ':'
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     (
	 *         facilitatorActors+=SecondaryActor 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)))* 
	 *         KeywordFacilitatorActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         facilitatorActors+=SecondaryActor
	 *     )
	 *     (
	 *         secondaryActors+=SecondaryActor 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)))* 
	 *         KeywordFacilitatorActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         facilitatorActors+=SecondaryActor
	 *     )
	 *     intent=STRING ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)))* KeywordFacilitatorActor ':' (ambiguity) facilitatorActors+=SecondaryActor
	 *     level=Level ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)))* KeywordFacilitatorActor ':' (ambiguity) facilitatorActors+=SecondaryActor
	 *     multiplicity=STRING ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)))* KeywordFacilitatorActor ':' (ambiguity) facilitatorActors+=SecondaryActor
	 *     name=ID ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)))* KeywordFacilitatorActor ':' (ambiguity) facilitatorActors+=SecondaryActor
	 *     postcondition=STRING ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)))* KeywordFacilitatorActor ':' (ambiguity) facilitatorActors+=SecondaryActor
	 *     precondition=STRING ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)))* KeywordFacilitatorActor ':' (ambiguity) facilitatorActors+=SecondaryActor
	 *     primaryActor=PrimaryActor ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)))* KeywordFacilitatorActor ':' (ambiguity) facilitatorActors+=SecondaryActor
	 *     scope=ID ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)))* KeywordFacilitatorActor ':' (ambiguity) facilitatorActors+=SecondaryActor
	 */
	protected void emit_ExceptionalUseCase_____NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_______KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (KeywordPrimaryActor ':' (NotApplicable | None)) | 
	  *         (KeywordFacilitatorActor ':' (NotApplicable | None)) | 
	  *         (KeywordHandlerClass ':' (NotApplicable | None))
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     contextExceptions+=ContextExceptionMapping (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     handlerClass=ID (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     intent=STRING (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     level=Level (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     multiplicity=STRING (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     name=ID (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     postcondition=STRING (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     precondition=STRING (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     primaryActor=PrimaryActor (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     scope=ID (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordSecondaryActor ':' ((NotApplicable | None) (ambiguity) KeywordSecondaryActor ':')* secondaryActors+=SecondaryActor
	 */
	protected void emit_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (KeywordPrimaryActor ':' (NotApplicable | None)) | 
	  *         (KeywordSecondaryActor ':' (NotApplicable | None)) | 
	  *         (KeywordFacilitatorActor ':' (NotApplicable | None)) | 
	  *         (KeywordHandlerClass ':' (NotApplicable | None))
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     contextExceptions+=ContextExceptionMapping (ambiguity) (rule end)
	 *     contextExceptions+=ContextExceptionMapping (ambiguity) KeywordContextException ':' contextExceptions+=ContextExceptionMapping
	 *     contextExceptions+=ContextExceptionMapping (ambiguity) KeywordIntention ':' intent=STRING
	 *     contextExceptions+=ContextExceptionMapping (ambiguity) KeywordLevel ':' level=Level
	 *     contextExceptions+=ContextExceptionMapping (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     contextExceptions+=ContextExceptionMapping (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     contextExceptions+=ContextExceptionMapping (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     contextExceptions+=ContextExceptionMapping (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     contextExceptions+=ContextExceptionMapping (ambiguity) KeywordScope ':' scope=ID
	 *     facilitatorActors+=SecondaryActor (ambiguity) (rule end)
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordContextException ':' contextExceptions+=ContextExceptionMapping
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordIntention ':' intent=STRING
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordLevel ':' level=Level
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordScope ':' scope=ID
	 *     handlerClass=ID (ambiguity) (rule end)
	 *     handlerClass=ID (ambiguity) KeywordContextException ':' contextExceptions+=ContextExceptionMapping
	 *     handlerClass=ID (ambiguity) KeywordIntention ':' intent=STRING
	 *     handlerClass=ID (ambiguity) KeywordLevel ':' level=Level
	 *     handlerClass=ID (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     handlerClass=ID (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     handlerClass=ID (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     handlerClass=ID (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     handlerClass=ID (ambiguity) KeywordScope ':' scope=ID
	 *     intent=STRING (ambiguity) (rule end)
	 *     intent=STRING (ambiguity) KeywordContextException ':' contextExceptions+=ContextExceptionMapping
	 *     intent=STRING (ambiguity) KeywordIntention ':' intent=STRING
	 *     intent=STRING (ambiguity) KeywordLevel ':' level=Level
	 *     intent=STRING (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     intent=STRING (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     intent=STRING (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     intent=STRING (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     intent=STRING (ambiguity) KeywordScope ':' scope=ID
	 *     level=Level (ambiguity) (rule end)
	 *     level=Level (ambiguity) KeywordContextException ':' contextExceptions+=ContextExceptionMapping
	 *     level=Level (ambiguity) KeywordIntention ':' intent=STRING
	 *     level=Level (ambiguity) KeywordLevel ':' level=Level
	 *     level=Level (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     level=Level (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     level=Level (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     level=Level (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     level=Level (ambiguity) KeywordScope ':' scope=ID
	 *     multiplicity=STRING (ambiguity) (rule end)
	 *     multiplicity=STRING (ambiguity) KeywordContextException ':' contextExceptions+=ContextExceptionMapping
	 *     multiplicity=STRING (ambiguity) KeywordIntention ':' intent=STRING
	 *     multiplicity=STRING (ambiguity) KeywordLevel ':' level=Level
	 *     multiplicity=STRING (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     multiplicity=STRING (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     multiplicity=STRING (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     multiplicity=STRING (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     multiplicity=STRING (ambiguity) KeywordScope ':' scope=ID
	 *     name=ID (ambiguity) (rule end)
	 *     name=ID (ambiguity) KeywordContextException ':' contextExceptions+=ContextExceptionMapping
	 *     name=ID (ambiguity) KeywordIntention ':' intent=STRING
	 *     name=ID (ambiguity) KeywordLevel ':' level=Level
	 *     name=ID (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     name=ID (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     name=ID (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     name=ID (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     name=ID (ambiguity) KeywordScope ':' scope=ID
	 *     postcondition=STRING (ambiguity) (rule end)
	 *     postcondition=STRING (ambiguity) KeywordContextException ':' contextExceptions+=ContextExceptionMapping
	 *     postcondition=STRING (ambiguity) KeywordIntention ':' intent=STRING
	 *     postcondition=STRING (ambiguity) KeywordLevel ':' level=Level
	 *     postcondition=STRING (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     postcondition=STRING (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     postcondition=STRING (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     postcondition=STRING (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     postcondition=STRING (ambiguity) KeywordScope ':' scope=ID
	 *     precondition=STRING (ambiguity) (rule end)
	 *     precondition=STRING (ambiguity) KeywordContextException ':' contextExceptions+=ContextExceptionMapping
	 *     precondition=STRING (ambiguity) KeywordIntention ':' intent=STRING
	 *     precondition=STRING (ambiguity) KeywordLevel ':' level=Level
	 *     precondition=STRING (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     precondition=STRING (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     precondition=STRING (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     precondition=STRING (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     precondition=STRING (ambiguity) KeywordScope ':' scope=ID
	 *     primaryActor=PrimaryActor (ambiguity) (rule end)
	 *     primaryActor=PrimaryActor (ambiguity) KeywordContextException ':' contextExceptions+=ContextExceptionMapping
	 *     primaryActor=PrimaryActor (ambiguity) KeywordIntention ':' intent=STRING
	 *     primaryActor=PrimaryActor (ambiguity) KeywordLevel ':' level=Level
	 *     primaryActor=PrimaryActor (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     primaryActor=PrimaryActor (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     primaryActor=PrimaryActor (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     primaryActor=PrimaryActor (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     primaryActor=PrimaryActor (ambiguity) KeywordScope ':' scope=ID
	 *     scope=ID (ambiguity) (rule end)
	 *     scope=ID (ambiguity) KeywordContextException ':' contextExceptions+=ContextExceptionMapping
	 *     scope=ID (ambiguity) KeywordIntention ':' intent=STRING
	 *     scope=ID (ambiguity) KeywordLevel ':' level=Level
	 *     scope=ID (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     scope=ID (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     scope=ID (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     scope=ID (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     scope=ID (ambiguity) KeywordScope ':' scope=ID
	 *     secondaryActors+=SecondaryActor (ambiguity) (rule end)
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordContextException ':' contextExceptions+=ContextExceptionMapping
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordIntention ':' intent=STRING
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordLevel ':' level=Level
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordMainSuccessScenario ':' main=MainScenario
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordMultiplicity ':' multiplicity=STRING
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordPostcondition ':' postcondition=STRING
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordPrecondition ':' precondition=STRING
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordScope ':' scope=ID
	 */
	protected void emit_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (KeywordSecondaryActor ':' (NotApplicable | None)) | 
	  *         (KeywordFacilitatorActor ':' (NotApplicable | None)) | 
	  *         (KeywordHandlerClass ':' (NotApplicable | None))
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     contextExceptions+=ContextExceptionMapping (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     handlerClass=ID (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     intent=STRING (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     level=Level (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     multiplicity=STRING (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     name=ID (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     postcondition=STRING (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     precondition=STRING (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     primaryActor=PrimaryActor (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     scope=ID (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordPrimaryActor ':' ((NotApplicable | None) (ambiguity) KeywordPrimaryActor ':')* primaryActor=PrimaryActor
	 */
	protected void emit_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (KeywordPrimaryActor ':' (NotApplicable | None)) | 
	  *         (KeywordSecondaryActor ':' (NotApplicable | None)) | 
	  *         (KeywordFacilitatorActor ':' (NotApplicable | None))
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     contextExceptions+=ContextExceptionMapping (ambiguity) KeywordHandlerClass ':' ((NotApplicable | None) (ambiguity) KeywordHandlerClass ':')* handlerClass=ID
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordHandlerClass ':' ((NotApplicable | None) (ambiguity) KeywordHandlerClass ':')* handlerClass=ID
	 *     handlerClass=ID (ambiguity) KeywordHandlerClass ':' ((NotApplicable | None) (ambiguity) KeywordHandlerClass ':')* handlerClass=ID
	 *     intent=STRING (ambiguity) KeywordHandlerClass ':' ((NotApplicable | None) (ambiguity) KeywordHandlerClass ':')* handlerClass=ID
	 *     level=Level (ambiguity) KeywordHandlerClass ':' ((NotApplicable | None) (ambiguity) KeywordHandlerClass ':')* handlerClass=ID
	 *     multiplicity=STRING (ambiguity) KeywordHandlerClass ':' ((NotApplicable | None) (ambiguity) KeywordHandlerClass ':')* handlerClass=ID
	 *     name=ID (ambiguity) KeywordHandlerClass ':' ((NotApplicable | None) (ambiguity) KeywordHandlerClass ':')* handlerClass=ID
	 *     postcondition=STRING (ambiguity) KeywordHandlerClass ':' ((NotApplicable | None) (ambiguity) KeywordHandlerClass ':')* handlerClass=ID
	 *     precondition=STRING (ambiguity) KeywordHandlerClass ':' ((NotApplicable | None) (ambiguity) KeywordHandlerClass ':')* handlerClass=ID
	 *     primaryActor=PrimaryActor (ambiguity) KeywordHandlerClass ':' ((NotApplicable | None) (ambiguity) KeywordHandlerClass ':')* handlerClass=ID
	 *     scope=ID (ambiguity) KeywordHandlerClass ':' ((NotApplicable | None) (ambiguity) KeywordHandlerClass ':')* handlerClass=ID
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordHandlerClass ':' ((NotApplicable | None) (ambiguity) KeywordHandlerClass ':')* handlerClass=ID
	 */
	protected void emit_HandlerUseCase_____KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (KeywordPrimaryActor ':' (NotApplicable | None)) | 
	  *         (KeywordSecondaryActor ':' (NotApplicable | None)) | 
	  *         (KeywordHandlerClass ':' (NotApplicable | None))
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     contextExceptions+=ContextExceptionMapping (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     facilitatorActors+=SecondaryActor (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     handlerClass=ID (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     intent=STRING (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     level=Level (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     multiplicity=STRING (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     name=ID (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     postcondition=STRING (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     precondition=STRING (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     primaryActor=PrimaryActor (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     scope=ID (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 *     secondaryActors+=SecondaryActor (ambiguity) KeywordFacilitatorActor ':' ((NotApplicable | None) (ambiguity) KeywordFacilitatorActor ':')* facilitatorActors+=SecondaryActor
	 */
	protected void emit_HandlerUseCase_____KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (NotApplicable | None) 
	  *         (
	  *             (KeywordSecondaryActor ':' (NotApplicable | None)) | 
	  *             (KeywordFacilitatorActor ':' (NotApplicable | None)) | 
	  *             (KeywordHandlerClass ':' (NotApplicable | None))
	  *         )* 
	  *         KeywordPrimaryActor 
	  *         ':'
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     (
	 *         contextExceptions+=ContextExceptionMapping 
	 *         ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordPrimaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         primaryActor=PrimaryActor
	 *     )
	 *     (
	 *         facilitatorActors+=SecondaryActor 
	 *         ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordPrimaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         primaryActor=PrimaryActor
	 *     )
	 *     (
	 *         handlerClass=ID 
	 *         ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordPrimaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         primaryActor=PrimaryActor
	 *     )
	 *     (
	 *         intent=STRING 
	 *         ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordPrimaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         primaryActor=PrimaryActor
	 *     )
	 *     (
	 *         level=Level 
	 *         ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordPrimaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         primaryActor=PrimaryActor
	 *     )
	 *     (
	 *         multiplicity=STRING 
	 *         ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordPrimaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         primaryActor=PrimaryActor
	 *     )
	 *     (
	 *         name=ID 
	 *         ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordPrimaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         primaryActor=PrimaryActor
	 *     )
	 *     (
	 *         postcondition=STRING 
	 *         ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordPrimaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         primaryActor=PrimaryActor
	 *     )
	 *     (
	 *         precondition=STRING 
	 *         ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordPrimaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         primaryActor=PrimaryActor
	 *     )
	 *     (
	 *         primaryActor=PrimaryActor 
	 *         ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordPrimaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         primaryActor=PrimaryActor
	 *     )
	 *     (
	 *         scope=ID 
	 *         ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordPrimaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         primaryActor=PrimaryActor
	 *     )
	 *     (
	 *         secondaryActors+=SecondaryActor 
	 *         ((KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordPrimaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         primaryActor=PrimaryActor
	 *     )
	 */
	protected void emit_HandlerUseCase_____NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (NotApplicable | None) 
	  *         (
	  *             (KeywordPrimaryActor ':' (NotApplicable | None)) | 
	  *             (KeywordFacilitatorActor ':' (NotApplicable | None)) | 
	  *             (KeywordHandlerClass ':' (NotApplicable | None))
	  *         )* 
	  *         KeywordSecondaryActor 
	  *         ':'
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     (
	 *         contextExceptions+=ContextExceptionMapping 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordSecondaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         secondaryActors+=SecondaryActor
	 *     )
	 *     (
	 *         facilitatorActors+=SecondaryActor 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordSecondaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         secondaryActors+=SecondaryActor
	 *     )
	 *     (
	 *         handlerClass=ID 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordSecondaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         secondaryActors+=SecondaryActor
	 *     )
	 *     (
	 *         intent=STRING 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordSecondaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         secondaryActors+=SecondaryActor
	 *     )
	 *     (
	 *         level=Level 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordSecondaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         secondaryActors+=SecondaryActor
	 *     )
	 *     (
	 *         multiplicity=STRING 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordSecondaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         secondaryActors+=SecondaryActor
	 *     )
	 *     (
	 *         name=ID 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordSecondaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         secondaryActors+=SecondaryActor
	 *     )
	 *     (
	 *         postcondition=STRING 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordSecondaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         secondaryActors+=SecondaryActor
	 *     )
	 *     (
	 *         precondition=STRING 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordSecondaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         secondaryActors+=SecondaryActor
	 *     )
	 *     (
	 *         primaryActor=PrimaryActor 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordSecondaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         secondaryActors+=SecondaryActor
	 *     )
	 *     (
	 *         scope=ID 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordSecondaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         secondaryActors+=SecondaryActor
	 *     )
	 *     (
	 *         secondaryActors+=SecondaryActor 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordSecondaryActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         secondaryActors+=SecondaryActor
	 *     )
	 */
	protected void emit_HandlerUseCase_____NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0______a_KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (NotApplicable | None) 
	  *         (
	  *             (KeywordPrimaryActor ':' (NotApplicable | None)) | 
	  *             (KeywordSecondaryActor ':' (NotApplicable | None)) | 
	  *             (KeywordHandlerClass ':' (NotApplicable | None))
	  *         )* 
	  *         KeywordFacilitatorActor 
	  *         ':'
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     (
	 *         contextExceptions+=ContextExceptionMapping 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordFacilitatorActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         facilitatorActors+=SecondaryActor
	 *     )
	 *     (
	 *         facilitatorActors+=SecondaryActor 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordFacilitatorActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         facilitatorActors+=SecondaryActor
	 *     )
	 *     (
	 *         handlerClass=ID 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordFacilitatorActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         facilitatorActors+=SecondaryActor
	 *     )
	 *     (
	 *         intent=STRING 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordFacilitatorActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         facilitatorActors+=SecondaryActor
	 *     )
	 *     (
	 *         level=Level 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordFacilitatorActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         facilitatorActors+=SecondaryActor
	 *     )
	 *     (
	 *         multiplicity=STRING 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordFacilitatorActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         facilitatorActors+=SecondaryActor
	 *     )
	 *     (
	 *         name=ID 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordFacilitatorActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         facilitatorActors+=SecondaryActor
	 *     )
	 *     (
	 *         postcondition=STRING 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordFacilitatorActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         facilitatorActors+=SecondaryActor
	 *     )
	 *     (
	 *         precondition=STRING 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordFacilitatorActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         facilitatorActors+=SecondaryActor
	 *     )
	 *     (
	 *         primaryActor=PrimaryActor 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordFacilitatorActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         facilitatorActors+=SecondaryActor
	 *     )
	 *     (
	 *         scope=ID 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordFacilitatorActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         facilitatorActors+=SecondaryActor
	 *     )
	 *     (
	 *         secondaryActors+=SecondaryActor 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordHandlerClass ':' (NotApplicable | None)))* 
	 *         KeywordFacilitatorActor 
	 *         ':' 
	 *         (ambiguity) 
	 *         facilitatorActors+=SecondaryActor
	 *     )
	 */
	protected void emit_HandlerUseCase_____NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_______KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1___NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (NotApplicable | None) 
	  *         (
	  *             (KeywordPrimaryActor ':' (NotApplicable | None)) | 
	  *             (KeywordSecondaryActor ':' (NotApplicable | None)) | 
	  *             (KeywordFacilitatorActor ':' (NotApplicable | None))
	  *         )* 
	  *         KeywordHandlerClass 
	  *         ':'
	  *     )*
	 *
	 * This ambiguous syntax occurs at:
	 *     (
	 *         contextExceptions+=ContextExceptionMapping 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* 
	 *         KeywordHandlerClass 
	 *         ':' 
	 *         (ambiguity) 
	 *         handlerClass=ID
	 *     )
	 *     (
	 *         facilitatorActors+=SecondaryActor 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* 
	 *         KeywordHandlerClass 
	 *         ':' 
	 *         (ambiguity) 
	 *         handlerClass=ID
	 *     )
	 *     (
	 *         handlerClass=ID 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* 
	 *         KeywordHandlerClass 
	 *         ':' 
	 *         (ambiguity) 
	 *         handlerClass=ID
	 *     )
	 *     (
	 *         intent=STRING 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* 
	 *         KeywordHandlerClass 
	 *         ':' 
	 *         (ambiguity) 
	 *         handlerClass=ID
	 *     )
	 *     (
	 *         level=Level 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* 
	 *         KeywordHandlerClass 
	 *         ':' 
	 *         (ambiguity) 
	 *         handlerClass=ID
	 *     )
	 *     (
	 *         multiplicity=STRING 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* 
	 *         KeywordHandlerClass 
	 *         ':' 
	 *         (ambiguity) 
	 *         handlerClass=ID
	 *     )
	 *     (
	 *         name=ID 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* 
	 *         KeywordHandlerClass 
	 *         ':' 
	 *         (ambiguity) 
	 *         handlerClass=ID
	 *     )
	 *     (
	 *         postcondition=STRING 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* 
	 *         KeywordHandlerClass 
	 *         ':' 
	 *         (ambiguity) 
	 *         handlerClass=ID
	 *     )
	 *     (
	 *         precondition=STRING 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* 
	 *         KeywordHandlerClass 
	 *         ':' 
	 *         (ambiguity) 
	 *         handlerClass=ID
	 *     )
	 *     (
	 *         primaryActor=PrimaryActor 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* 
	 *         KeywordHandlerClass 
	 *         ':' 
	 *         (ambiguity) 
	 *         handlerClass=ID
	 *     )
	 *     (
	 *         scope=ID 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* 
	 *         KeywordHandlerClass 
	 *         ':' 
	 *         (ambiguity) 
	 *         handlerClass=ID
	 *     )
	 *     (
	 *         secondaryActors+=SecondaryActor 
	 *         ((KeywordPrimaryActor ':' (NotApplicable | None)) | (KeywordSecondaryActor ':' (NotApplicable | None)) | (KeywordFacilitatorActor ':' (NotApplicable | None)))* 
	 *         KeywordHandlerClass 
	 *         ':' 
	 *         (ambiguity) 
	 *         handlerClass=ID
	 *     )
	 */
	protected void emit_HandlerUseCase_____NoneParserRuleCall_3_9_2_0_1_or_NotApplicableParserRuleCall_3_9_2_0_0_______KeywordFacilitatorActorParserRuleCall_3_8_0_ColonKeyword_3_8_1___NoneParserRuleCall_3_8_2_0_1_or_NotApplicableParserRuleCall_3_8_2_0_0_____or___KeywordPrimaryActorParserRuleCall_3_6_0_ColonKeyword_3_6_1___NoneParserRuleCall_3_6_2_0_1_or_NotApplicableParserRuleCall_3_6_2_0_0_____or___KeywordSecondaryActorParserRuleCall_3_7_0_ColonKeyword_3_7_1___NoneParserRuleCall_3_7_2_0_1_or_NotApplicableParserRuleCall_3_7_2_0_0______a_KeywordHandlerClassParserRuleCall_3_9_0_ColonKeyword_3_9_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ('!' KeywordStandardMode ':' 'off')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) useCases+=UseCase
	 */
	protected void emit_IoTUseCaseModel___ExclamationMarkKeyword_0_1_KeywordStandardModeParserRuleCall_0_2_ColonKeyword_0_3_OffKeyword_0_4_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
